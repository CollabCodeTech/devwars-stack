version: '3.7'

services:
  reverse-proxy:
    image: traefik
    command: --api --docker
    environment:
      - exposedByDefault=false
    ports:
      - "80:80"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.backend=reverse-proxy"
      - "traefik.port=8080"
      - "traefik.frontend.rule=Host:traefik.devwars.test"
  database:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    volumes:
      - ./postgres:/postgres/data
    environment:
      POSTGRES_DB: devwars
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: secret
    labels:
      - "traefik.enable=false"
      - "traefik.backend=database"
  api:
    build:
      context: .
      dockerfile: ./docker-files/Dockerfile-api
    env_file:
      - .env.api
    volumes:
      - ./api/:/devwars
      - /devwars/node_modules
    depends_on:
      - database
    links:
      - database
    labels:
      - "traefik.backend=api"
      - "traefik.port=3030"
      - "traefik.frontend.rule=Host:api.devwars.test"
  web:
    build:
      context: .
      dockerfile: docker-files/Dockerfile-web
      args:
        API_URL_BROWSER: http://api.devwars.test
        API_URL: http://api:3030
    volumes:
      - ./web:/app
    env_file:
      - .env.web
    labels:
      - "traefik.backend=web"
      - "traefik.port=3000"
      - "traefik.frontend.rule=Host:devwars.test"
  editor:
    build:
      context: .
      dockerfile: docker-files/Dockerfile-editor
    env_file:
      - .env.editor
    environment:
      FIREBASE_ID: devwars-tv-bbae1
      DEVWARS_URL: http://api.devwars.test
    restart: always
    labels:
      - "traefik.backend=editor"
      - "traefik.port=8000"
      - "traefik.frontend.rule=Host:watch.devwars.test"
    volumes:
      - ./firebase.json:/app/config/serviceAccountKey.json
      - ./editor:/app
